/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace roll_royce.challenge.com

abstract participant baseParticipant identified by userID {
  o String userID 
  o String username
  o String name
  o String contact
  o String email optional
  o DateTime created
  o Boolean disabled
  --> Department department
  }
 
participant Requestor extends baseParticipant {}
participant Worker extends baseParticipant {}
participant Admin extends baseParticipant {}
participant Manager extends baseParticipant {}
participant Operator extends baseParticipant {}
participant IoTserver extends baseParticipant {}

asset WorkRequest identified by entryID {
  o String entryID
  o String subjectRequest
  o Integer urgentRequest default=1 range=[1,5] // The work reqest priority for 1-5.
  o String summarizedTaskDescription
  o DateTime deadline // The work request deadline.
  o Integer completion // The 0-100 degree of completion.
  o Boolean disable default = false // Whether the task needs to be done.
  o DateTime created
  o String location
  o String referenceNumber
  o String ACtailNumber
  o String enginePositionNumber
  o String ESN 
  o String lineAdditions
  o String actions
  o String materialsNeeded
  o String specialInstructions
  o String hangarAdditions
  o String aircraftCheckName
  o String documentReference
  o String E4NotificationNumber
  o String componentChanges
  o String EXEJE8Notification optional
  o Boolean PNon optional
  o Boolean PNoff optional
  o String BFEShortages optional
  o String equipmentNumber
  --> Requestor requestor
  --> Worker worker
  --> Department department
  --> Project project
  --> Manager manager
  }
  
asset Department identified by departmentID {
  o String departmentID
  o String departmentName
  --> Manager manager
  }

asset Project identified by projectID {
  o String projectID
  o String projectName
  --> Manager manager
  }

asset TaskCard identified by cardID {
  o String cardID
  o String details
  o DateTime created
  o DateTime updated
  o Boolean completed
  o Boolean cancelled
  --> Worker worker
  --> Manager manager
  --> TaskCardTitle taskCardTitle
  --> WorkRequest workRequest
  }

asset TaskCardTitle identified by titleID {
  o String titleID
  o String title
  o DateTime created
  o DateTime updated
  --> Manager manager
  --> Admin admin
  }

asset WorkInstruction identified by instrctionID {
  o String instrctionID
  o String workscopeContactDetails
  o String revision
  o DateTime networkNumber
  o DateTime activity
  o DateTime originatorName
  o DateTime date
  --> CustomerInformation customerInformation
  --> WorkscopeTask workscopeTask
  }

asset CustomerInformation identified by customerInformationID {
  o String customerInformationID
  o String aircraftRegistration 
  o String engineType
  o String OnOffWing
  o String wingPosition
  o String taskLocation
  o DateTime taskStart 
  o DateTime taskEnd  
  --> Operator operator
  }

asset WorkscopeTask identified by workscopeTaskID {
  o String workscopeTaskID
  o String requestedTaskDescription 
  o String technicalDataReference 
  o String SIAtaskReference
  o String additionalNotes
  o Double costRateCharge
  o String costType
  o Boolean workInstructionAcceptance
  o String invoicingInstructions
  }
asset DeviceReading identified by deviceID {
  o String deviceID
  o String hash 
  o DateTime initialDate
  o DateTime endDate
  }
/**
 * Create transaction.
 */
transaction AdminCreateDepartment {
  --> Admin admin
  o String departmentID
  o String departmentName
  --> Manager manager
  }

event AdminCreateDepartmentEvent {
  --> Department department
  }

transaction AdminCreateProject {
  --> Admin admin
  o String projectID
  o String projectName
  --> Manager manager
  }

event AdminCreateProjectEvent {
  --> Project project
  }

transaction RequestorCreateWorkRequest {
  o String entryID
  o String subjectRequest
  o Integer urgentRequest default=1 range=[1,5]
  o String summarizedTaskDescription
  o DateTime deadline
  o Integer completion
  o Boolean disable default = false
  o DateTime created
  o String location
  o String referenceNumber
  o String ACtailNumber
  o String enginePositionNumber
  o String ESN 
  o String lineAdditions
  o String actions
  o String materialsNeeded
  o String specialInstructions
  o String hangarAdditions
  o String aircraftCheckName
  o String documentReference
  o String E4NotificationNumber
  o String componentChanges
  o String EXEJE8Notification optional
  o Boolean PNon optional
  o Boolean PNoff optional
  o String BFEShortages optional
  o String equipmentNumber
  --> Requestor requestorName
  --> Worker worker
  --> Department department
  --> Project project
  --> Manager manager
  }

event RequestorCreateWorkRequestEvent {
  --> WorkRequest workRequest
  }

transaction ManagerCreateTaskCard {
  o String cardID
  o String details
  o DateTime created
  o DateTime updated
  o Boolean completed
  o Boolean cancelled
  --> Worker worker
  --> Manager manager
  --> TaskCardTitle taskCardTitle
  --> WorkRequest workRequest
  }

event ManagerCreateTaskCardEvent {
  --> TaskCard taskCard
  }

transaction CreateTaskCardTitle {
  o String titleID
  o String title
  o DateTime created
  o DateTime updated
  --> Manager manager
  --> Admin admin
  }

event CreateTaskCardTitleEvent {
  --> TaskCardTitle taskCardTitle
  }
  
transaction CreateWorkInstruction {
  o String instrctionID
  o String workscopeContactDetails
  o String revision
  o DateTime networkNumber
  o DateTime activity
  o DateTime originatorName
  o DateTime date
  --> CustomerInformation customerInformation
  --> WorkscopeTask workscopeTask
  }

event CreateWorkInstructionEvent {
  --> WorkInstruction workInstruction
  }

transaction CreateCustomerInformation {
  o String customerInformationID
  o String aircraftRegistration 
  o String engineType
  o String OnOffWing
  o String wingPosition
  o String taskLocation
  o DateTime taskStart 
  o DateTime taskEnd  
  --> Operator operator
  }

event CreateCustomerInformationEvent {
  --> CustomerInformation customerInformation
  }

transaction CreateWorkscopeTask {
  o String workscopeTaskID
  o String requestedTaskDescription 
  o String technicalDataReference 
  o String SIAtaskReference
  o String additionalNotes
  o Double costRateCharge
  o String costType
  o Boolean workInstructionAcceptance
  o String invoicingInstructions
  }

event CreateWorkscopeTaskEvent {
  --> WorkscopeTask workscopeTask
  }
transaction CreateDeviceReading {
  o String deviceID
  o String hash 
  o DateTime initialDate
  o DateTime endDate
  }

event CreateDeviceReadingEvent {
  --> DeviceReading deviceReading
  }

/**
 * Update transaction.
 */
transaction UpdateDepartment {
  --> Admin admin optional
  --> Manager manager optional
  o String departmentName
  --> Department department
  }

event UpdateDepartmentEvent {
  --> Department department
  }

transaction UpdateProject {
  --> Admin admin optional
  --> Manager manager optional
  o String projectName
  --> Project project
  }

event UpdateProjectEvent {
  --> Project project
  }

transaction RequestorUpdateWorkRequest {
  --> Requestor requestor
  --> WorkRequest workRequest
  o String subjectRequest optional
  o Integer urgentRequest optional
  o String summarizedTaskDescription optional
  o DateTime deadline optional
  o String location optional
  o String referenceNumber optional
  o String ACtailNumber optional
  o String enginePositionNumber optional
  o String ESN optional
  o String lineAdditions optional
  o String actions optional
  o String materialsNeeded optional
  o String specialInstructions optional
  o String hangarAdditions optional
  o String aircraftCheckName optional
  o String documentReference optional
  o String E4NotificationNumber optional
  o String componentChanges optional
  o String EXEJE8Notification optional
  o Boolean PNon optional
  o Boolean PNoff optional
  o String BFEShortages optional
  o String equipmentNumber optional
  }

event RequestorUpdateWorkEvent {
  --> WorkRequest workRequest
  }

transaction AdminUpdateWorkRequest {
  --> Admin admin
  --> WorkRequest workRequest
  o Boolean disable
  }

event AdminUpdateWorkEvent {
  --> WorkRequest workRequest
  }

transaction ManagerUpdateWorkRequest {
  --> Manager manager
  --> WorkRequest workRequest
  o Integer completion
  }

event ManagerUpdateWorkEvent {
  --> WorkRequest workRequest
  }
  
transaction ManagerUpdateTaskCard {
  --> Manager manager
  --> TaskCard taskCard
  o Boolean cancelled
  }

event ManagerUpdateTaskCardEvent {
  --> TaskCard taskCard
  }

transaction WorkerUpdateTaskCard {
  --> Worker worker
  --> TaskCard taskCard
  o Boolean completed
  }

event WorkerUpdateTaskCardEvent {
  --> TaskCard taskCard
  }

transaction UpdateTaskCardTitle {
  --> Admin admin optional
  --> Manager manager optional
  o String title
  o DateTime created
  o DateTime updated
  --> TaskCardTitle taskCardTitle
  }

event UpdateTaskCardTitleEvent {
  --> TaskCardTitle taskCardTitle
  }

transaction UpdateWorkInstruction {
  --> Operator operator optional
  --> Manager manager optional
  o String workscopeContactDetails
  o String revision
  o DateTime networkNumber
  o DateTime activity
  o DateTime originatorName
  o DateTime date
  --> WorkInstruction workInstruction
  --> CustomerInformation customerInformation
  --> WorkscopeTask workscopeTask
  }

event UpdateWorkInstructionEvent {
  --> WorkInstruction workInstruction
  }

transaction UpdateCustomerInformation {
  --> Operator operator optional
  --> Manager manager optional
  o String aircraftRegistration 
  o String engineType
  o String OnOffWing
  o String wingPosition
  o String taskLocation
  o DateTime taskStart
  o DateTime taskEnd
  --> CustomerInformation customerInformation
  }

event UpdateCustomerInformationEvent {
  --> CustomerInformation customerInformation
  }

transaction UpdateWorkscopeTask {
  --> Operator operator optional
  --> Manager manager optional
  o String requestedTaskDescription
  o String technicalDataReference
  o String SIAtaskReference
  o String additionalNotes
  o Double costRateCharge
  o String costType
  o Boolean workInstructionAcceptance
  o String invoicingInstructions
  --> WorkscopeTask workscopeTask
  }

event UpdateWorkscopeTaskEvent {
  --> WorkscopeTask workscopeTask
  }


/**
 * Query transaction.
 */
transaction ListDepartments {}
event ListDepartmentsEvent {
  o String listData
  }

transaction ListProjects {}
event ListProjectsEvent {
  o String listData
  }

transaction ListTaskCardTitle {}
event ListTaskCardTitleEvent {
  o String listData
  }

transaction AdminWorkRequestList {}
event AdminWorkRequestListEvent {
  o String listData
  }

transaction ManagerWorkRequestList {
  o String userID
  }

event ManagerWorkRequestListEvent {
  o String listData
  }

transaction RequestorWorkRequestList {
  o String userID
  }

event RequestorWorkRequestListEvent {
  o String listData
  }

transaction WorkerTaskCardList {
  o String userID
  }

event WorkerTaskCardListEvent {
  o String listData
  }

transaction ManagerTaskCardList {
  o String userID
  }

event ManagerTaskCardListEvent {
  o String listData
  }
/**
 * Delete transaction.
 */
transaction DeleteTaskCardTitle {
  --> Admin admin optional
  --> Manager manager optional
  o String titleID
  }

event DeleteTaskCardTitleEvent {
  o String message
  }
